
stm32f302x8_drivers.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000174  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000654  08000174  08000174  00001174  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  080007c8  080007d0  000017d0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  080007c8  080007c8  000017d0  2**0
                  CONTENTS
  4 .ARM          00000000  080007c8  080007c8  000017d0  2**0
                  CONTENTS
  5 .preinit_array 00000000  080007c8  080007d0  000017d0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080007c8  080007c8  000017c8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  080007cc  080007cc  000017cc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         00000000  20000000  20000000  000017d0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  080007d0  00002000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  080007d0  0000201c  2**0
                  ALLOC
 11 .ARM.attributes 0000002a  00000000  00000000  000017d0  2**0
                  CONTENTS, READONLY
 12 .debug_info   000008f3  00000000  00000000  000017fa  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 0000026e  00000000  00000000  000020ed  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 000000b8  00000000  00000000  00002360  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 0000008d  00000000  00000000  00002418  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  000015b7  00000000  00000000  000024a5  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00000eec  00000000  00000000  00003a5c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00005020  00000000  00000000  00004948  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  00009968  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000224  00000000  00000000  000099ac  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000075  00000000  00000000  00009bd0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000174 <__do_global_dtors_aux>:
 8000174:	b510      	push	{r4, lr}
 8000176:	4c05      	ldr	r4, [pc, #20]	@ (800018c <__do_global_dtors_aux+0x18>)
 8000178:	7823      	ldrb	r3, [r4, #0]
 800017a:	b933      	cbnz	r3, 800018a <__do_global_dtors_aux+0x16>
 800017c:	4b04      	ldr	r3, [pc, #16]	@ (8000190 <__do_global_dtors_aux+0x1c>)
 800017e:	b113      	cbz	r3, 8000186 <__do_global_dtors_aux+0x12>
 8000180:	4804      	ldr	r0, [pc, #16]	@ (8000194 <__do_global_dtors_aux+0x20>)
 8000182:	f3af 8000 	nop.w
 8000186:	2301      	movs	r3, #1
 8000188:	7023      	strb	r3, [r4, #0]
 800018a:	bd10      	pop	{r4, pc}
 800018c:	20000000 	.word	0x20000000
 8000190:	00000000 	.word	0x00000000
 8000194:	080007b0 	.word	0x080007b0

08000198 <frame_dummy>:
 8000198:	b508      	push	{r3, lr}
 800019a:	4b03      	ldr	r3, [pc, #12]	@ (80001a8 <frame_dummy+0x10>)
 800019c:	b11b      	cbz	r3, 80001a6 <frame_dummy+0xe>
 800019e:	4903      	ldr	r1, [pc, #12]	@ (80001ac <frame_dummy+0x14>)
 80001a0:	4803      	ldr	r0, [pc, #12]	@ (80001b0 <frame_dummy+0x18>)
 80001a2:	f3af 8000 	nop.w
 80001a6:	bd08      	pop	{r3, pc}
 80001a8:	00000000 	.word	0x00000000
 80001ac:	20000004 	.word	0x20000004
 80001b0:	080007b0 	.word	0x080007b0

080001b4 <delay>:
 */

#include <stdint.h>
#include "stm32f302x8.h"

void delay(void) {
 80001b4:	b480      	push	{r7}
 80001b6:	b083      	sub	sp, #12
 80001b8:	af00      	add	r7, sp, #0

	for (uint32_t i = 0; i < 500000/2; i++);
 80001ba:	2300      	movs	r3, #0
 80001bc:	607b      	str	r3, [r7, #4]
 80001be:	e002      	b.n	80001c6 <delay+0x12>
 80001c0:	687b      	ldr	r3, [r7, #4]
 80001c2:	3301      	adds	r3, #1
 80001c4:	607b      	str	r3, [r7, #4]
 80001c6:	687b      	ldr	r3, [r7, #4]
 80001c8:	4a04      	ldr	r2, [pc, #16]	@ (80001dc <delay+0x28>)
 80001ca:	4293      	cmp	r3, r2
 80001cc:	d9f8      	bls.n	80001c0 <delay+0xc>
}
 80001ce:	bf00      	nop
 80001d0:	bf00      	nop
 80001d2:	370c      	adds	r7, #12
 80001d4:	46bd      	mov	sp, r7
 80001d6:	bc80      	pop	{r7}
 80001d8:	4770      	bx	lr
 80001da:	bf00      	nop
 80001dc:	0003d08f 	.word	0x0003d08f

080001e0 <main>:
#if !defined(__SOFT_FP__) && defined(__ARM_FP)
  #warning "FPU is not initialized, but the project is compiling for an FPU. Please initialize the FPU before use."
#endif

int main(void)
{
 80001e0:	b580      	push	{r7, lr}
 80001e2:	b08a      	sub	sp, #40	@ 0x28
 80001e4:	af00      	add	r7, sp, #0

	// LED test

	GPIOx_Handle_t GPIO_LED, GPIO_LED2, GPIO_BUTTON;
	GPIO_LED.pGPIOx = GPIOB; //GPIOA;
 80001e6:	4b29      	ldr	r3, [pc, #164]	@ (800028c <main+0xac>)
 80001e8:	61fb      	str	r3, [r7, #28]
	GPIO_LED.GPIO_PinConfig.GPIO_Pin_Number = GPIO_PIN_13; //GPIO_PIN_5;
 80001ea:	230d      	movs	r3, #13
 80001ec:	f887 3020 	strb.w	r3, [r7, #32]
	GPIO_LED.GPIO_PinConfig.GPIO_Pin_Mode = GPIO_MODE_OUT;
 80001f0:	2301      	movs	r3, #1
 80001f2:	f887 3021 	strb.w	r3, [r7, #33]	@ 0x21
	GPIO_LED.GPIO_PinConfig.GPIO_Pin_Speed = GPIO_OP_HIGH;
 80001f6:	2303      	movs	r3, #3
 80001f8:	f887 3022 	strb.w	r3, [r7, #34]	@ 0x22
	GPIO_LED.GPIO_PinConfig.GPIO_Pin_OPType = GPIO_OP_TYPE_PP; // GPIO_OP_TYPE_OD;
 80001fc:	2300      	movs	r3, #0
 80001fe:	f887 3024 	strb.w	r3, [r7, #36]	@ 0x24
	GPIO_LED.GPIO_PinConfig.GPIO_Pin_PuPd = GPIO_NO_PUPD;; //GPIO_PIN_PU;
 8000202:	2300      	movs	r3, #0
 8000204:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23


	GPIO_LED2.pGPIOx = GPIOB; //GPIOB;
 8000208:	4b20      	ldr	r3, [pc, #128]	@ (800028c <main+0xac>)
 800020a:	613b      	str	r3, [r7, #16]
	GPIO_LED2.GPIO_PinConfig.GPIO_Pin_Number = GPIO_PIN_14; //GPIO_PIN_14;
 800020c:	230e      	movs	r3, #14
 800020e:	753b      	strb	r3, [r7, #20]
	GPIO_LED2.GPIO_PinConfig.GPIO_Pin_Mode = GPIO_MODE_OUT;
 8000210:	2301      	movs	r3, #1
 8000212:	757b      	strb	r3, [r7, #21]
	GPIO_LED2.GPIO_PinConfig.GPIO_Pin_Speed = GPIO_OP_HIGH;
 8000214:	2303      	movs	r3, #3
 8000216:	75bb      	strb	r3, [r7, #22]
	GPIO_LED2.GPIO_PinConfig.GPIO_Pin_OPType = GPIO_OP_TYPE_PP;
 8000218:	2300      	movs	r3, #0
 800021a:	763b      	strb	r3, [r7, #24]
	GPIO_LED2.GPIO_PinConfig.GPIO_Pin_PuPd = GPIO_NO_PUPD;
 800021c:	2300      	movs	r3, #0
 800021e:	75fb      	strb	r3, [r7, #23]

	GPIO_BUTTON.pGPIOx = GPIOC;
 8000220:	4b1b      	ldr	r3, [pc, #108]	@ (8000290 <main+0xb0>)
 8000222:	607b      	str	r3, [r7, #4]
	GPIO_BUTTON.GPIO_PinConfig.GPIO_Pin_Number = GPIO_PIN_13;
 8000224:	230d      	movs	r3, #13
 8000226:	723b      	strb	r3, [r7, #8]
	GPIO_BUTTON.GPIO_PinConfig.GPIO_Pin_Mode = GPIO_MODE_IN;
 8000228:	2300      	movs	r3, #0
 800022a:	727b      	strb	r3, [r7, #9]
	GPIO_BUTTON.GPIO_PinConfig.GPIO_Pin_Speed = GPIO_OP_HIGH;
 800022c:	2303      	movs	r3, #3
 800022e:	72bb      	strb	r3, [r7, #10]
	GPIO_BUTTON.GPIO_PinConfig.GPIO_Pin_PuPd = GPIO_NO_PUPD;
 8000230:	2300      	movs	r3, #0
 8000232:	72fb      	strb	r3, [r7, #11]

	GPIO_PCLK_CTRL(GPIOB, ENABLE);
 8000234:	2101      	movs	r1, #1
 8000236:	4815      	ldr	r0, [pc, #84]	@ (800028c <main+0xac>)
 8000238:	f000 f9e6 	bl	8000608 <GPIO_PCLK_CTRL>
	GPIO_PCLK_CTRL(GPIOC, ENABLE);
 800023c:	2101      	movs	r1, #1
 800023e:	4814      	ldr	r0, [pc, #80]	@ (8000290 <main+0xb0>)
 8000240:	f000 f9e2 	bl	8000608 <GPIO_PCLK_CTRL>

	GPIO_Init(&GPIO_LED);
 8000244:	f107 031c 	add.w	r3, r7, #28
 8000248:	4618      	mov	r0, r3
 800024a:	f000 f84d 	bl	80002e8 <GPIO_Init>
	GPIO_Init(&GPIO_LED2);
 800024e:	f107 0310 	add.w	r3, r7, #16
 8000252:	4618      	mov	r0, r3
 8000254:	f000 f848 	bl	80002e8 <GPIO_Init>
	GPIO_Init(&GPIO_BUTTON);
 8000258:	1d3b      	adds	r3, r7, #4
 800025a:	4618      	mov	r0, r3
 800025c:	f000 f844 	bl	80002e8 <GPIO_Init>
    /* Loop forever */
	while(1) {
		//GPIO_Toggle_Out_Pin(GPIOA, GPIO_PIN_5);

		if (GPIO_Read_In_Pin(GPIOC, GPIO_PIN_13)) {
 8000260:	210d      	movs	r1, #13
 8000262:	480b      	ldr	r0, [pc, #44]	@ (8000290 <main+0xb0>)
 8000264:	f000 fa56 	bl	8000714 <GPIO_Read_In_Pin>
 8000268:	4603      	mov	r3, r0
 800026a:	2b00      	cmp	r3, #0
 800026c:	d006      	beq.n	800027c <main+0x9c>
			delay();
 800026e:	f7ff ffa1 	bl	80001b4 <delay>
			GPIO_Toggle_Out_Pin(GPIOB, GPIO_PIN_13);
 8000272:	210d      	movs	r1, #13
 8000274:	4805      	ldr	r0, [pc, #20]	@ (800028c <main+0xac>)
 8000276:	f000 fa62 	bl	800073e <GPIO_Toggle_Out_Pin>
 800027a:	e7f1      	b.n	8000260 <main+0x80>
		}
		else {
			delay();
 800027c:	f7ff ff9a 	bl	80001b4 <delay>
			GPIO_Toggle_Out_Pin(GPIOB, GPIO_PIN_14);
 8000280:	210e      	movs	r1, #14
 8000282:	4802      	ldr	r0, [pc, #8]	@ (800028c <main+0xac>)
 8000284:	f000 fa5b 	bl	800073e <GPIO_Toggle_Out_Pin>
		if (GPIO_Read_In_Pin(GPIOC, GPIO_PIN_13)) {
 8000288:	e7ea      	b.n	8000260 <main+0x80>
 800028a:	bf00      	nop
 800028c:	48000400 	.word	0x48000400
 8000290:	48000800 	.word	0x48000800

08000294 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000294:	480d      	ldr	r0, [pc, #52]	@ (80002cc <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000296:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000298:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 800029c:	480c      	ldr	r0, [pc, #48]	@ (80002d0 <LoopForever+0x6>)
  ldr r1, =_edata
 800029e:	490d      	ldr	r1, [pc, #52]	@ (80002d4 <LoopForever+0xa>)
  ldr r2, =_sidata
 80002a0:	4a0d      	ldr	r2, [pc, #52]	@ (80002d8 <LoopForever+0xe>)
  movs r3, #0
 80002a2:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80002a4:	e002      	b.n	80002ac <LoopCopyDataInit>

080002a6 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80002a6:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80002a8:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80002aa:	3304      	adds	r3, #4

080002ac <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80002ac:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80002ae:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80002b0:	d3f9      	bcc.n	80002a6 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80002b2:	4a0a      	ldr	r2, [pc, #40]	@ (80002dc <LoopForever+0x12>)
  ldr r4, =_ebss
 80002b4:	4c0a      	ldr	r4, [pc, #40]	@ (80002e0 <LoopForever+0x16>)
  movs r3, #0
 80002b6:	2300      	movs	r3, #0
  b LoopFillZerobss
 80002b8:	e001      	b.n	80002be <LoopFillZerobss>

080002ba <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80002ba:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80002bc:	3204      	adds	r2, #4

080002be <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80002be:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80002c0:	d3fb      	bcc.n	80002ba <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80002c2:	f000 fa51 	bl	8000768 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80002c6:	f7ff ff8b 	bl	80001e0 <main>

080002ca <LoopForever>:

LoopForever:
  b LoopForever
 80002ca:	e7fe      	b.n	80002ca <LoopForever>
  ldr   r0, =_estack
 80002cc:	20004000 	.word	0x20004000
  ldr r0, =_sdata
 80002d0:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80002d4:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 80002d8:	080007d0 	.word	0x080007d0
  ldr r2, =_sbss
 80002dc:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 80002e0:	2000001c 	.word	0x2000001c

080002e4 <ADC1_2_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80002e4:	e7fe      	b.n	80002e4 <ADC1_2_IRQHandler>
	...

080002e8 <GPIO_Init>:
 *
 * Return			: None
 *
 * Note				: N/A
 */
void GPIO_Init(GPIOx_Handle_t *pGPIOHandle) {
 80002e8:	b480      	push	{r7}
 80002ea:	b087      	sub	sp, #28
 80002ec:	af00      	add	r7, sp, #0
 80002ee:	6078      	str	r0, [r7, #4]
	// 1. configure the mode of GPIO pin

	uint32_t temp = 0;
 80002f0:	2300      	movs	r3, #0
 80002f2:	617b      	str	r3, [r7, #20]

	if (pGPIOHandle->GPIO_PinConfig.GPIO_Pin_Mode <= GPIO_MODE_ANALOG) {
 80002f4:	687b      	ldr	r3, [r7, #4]
 80002f6:	795b      	ldrb	r3, [r3, #5]
 80002f8:	2b03      	cmp	r3, #3
 80002fa:	d820      	bhi.n	800033e <GPIO_Init+0x56>
		// non interrupt mode
		temp = (pGPIOHandle->GPIO_PinConfig.GPIO_Pin_Mode << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_Pin_Number));
 80002fc:	687b      	ldr	r3, [r7, #4]
 80002fe:	795b      	ldrb	r3, [r3, #5]
 8000300:	461a      	mov	r2, r3
 8000302:	687b      	ldr	r3, [r7, #4]
 8000304:	791b      	ldrb	r3, [r3, #4]
 8000306:	005b      	lsls	r3, r3, #1
 8000308:	fa02 f303 	lsl.w	r3, r2, r3
 800030c:	617b      	str	r3, [r7, #20]
		pGPIOHandle->pGPIOx->MODER &= ~(0x3 << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_Pin_Number)); // clearing
 800030e:	687b      	ldr	r3, [r7, #4]
 8000310:	681b      	ldr	r3, [r3, #0]
 8000312:	681a      	ldr	r2, [r3, #0]
 8000314:	687b      	ldr	r3, [r7, #4]
 8000316:	791b      	ldrb	r3, [r3, #4]
 8000318:	005b      	lsls	r3, r3, #1
 800031a:	2103      	movs	r1, #3
 800031c:	fa01 f303 	lsl.w	r3, r1, r3
 8000320:	43db      	mvns	r3, r3
 8000322:	4619      	mov	r1, r3
 8000324:	687b      	ldr	r3, [r7, #4]
 8000326:	681b      	ldr	r3, [r3, #0]
 8000328:	400a      	ands	r2, r1
 800032a:	601a      	str	r2, [r3, #0]
		pGPIOHandle->pGPIOx->MODER |= temp; // setting
 800032c:	687b      	ldr	r3, [r7, #4]
 800032e:	681b      	ldr	r3, [r3, #0]
 8000330:	6819      	ldr	r1, [r3, #0]
 8000332:	687b      	ldr	r3, [r7, #4]
 8000334:	681b      	ldr	r3, [r3, #0]
 8000336:	697a      	ldr	r2, [r7, #20]
 8000338:	430a      	orrs	r2, r1
 800033a:	601a      	str	r2, [r3, #0]
 800033c:	e09a      	b.n	8000474 <GPIO_Init+0x18c>

	} else {

		// 1.1 configure interrupt mode
		if (pGPIOHandle->GPIO_PinConfig.GPIO_Pin_Mode == GPIO_MODE_IT_FT) {
 800033e:	687b      	ldr	r3, [r7, #4]
 8000340:	795b      	ldrb	r3, [r3, #5]
 8000342:	2b04      	cmp	r3, #4
 8000344:	d117      	bne.n	8000376 <GPIO_Init+0x8e>
			// falling edge
			EXTI->FTSR1 |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_Pin_Number);
 8000346:	4b97      	ldr	r3, [pc, #604]	@ (80005a4 <GPIO_Init+0x2bc>)
 8000348:	68db      	ldr	r3, [r3, #12]
 800034a:	687a      	ldr	r2, [r7, #4]
 800034c:	7912      	ldrb	r2, [r2, #4]
 800034e:	4611      	mov	r1, r2
 8000350:	2201      	movs	r2, #1
 8000352:	408a      	lsls	r2, r1
 8000354:	4611      	mov	r1, r2
 8000356:	4a93      	ldr	r2, [pc, #588]	@ (80005a4 <GPIO_Init+0x2bc>)
 8000358:	430b      	orrs	r3, r1
 800035a:	60d3      	str	r3, [r2, #12]
			EXTI->RTSR1 &= ~(1 << pGPIOHandle->GPIO_PinConfig.GPIO_Pin_Number);
 800035c:	4b91      	ldr	r3, [pc, #580]	@ (80005a4 <GPIO_Init+0x2bc>)
 800035e:	689b      	ldr	r3, [r3, #8]
 8000360:	687a      	ldr	r2, [r7, #4]
 8000362:	7912      	ldrb	r2, [r2, #4]
 8000364:	4611      	mov	r1, r2
 8000366:	2201      	movs	r2, #1
 8000368:	408a      	lsls	r2, r1
 800036a:	43d2      	mvns	r2, r2
 800036c:	4611      	mov	r1, r2
 800036e:	4a8d      	ldr	r2, [pc, #564]	@ (80005a4 <GPIO_Init+0x2bc>)
 8000370:	400b      	ands	r3, r1
 8000372:	6093      	str	r3, [r2, #8]
 8000374:	e035      	b.n	80003e2 <GPIO_Init+0xfa>

		} else if (pGPIOHandle->GPIO_PinConfig.GPIO_Pin_Mode == GPIO_MODE_IT_RT) {
 8000376:	687b      	ldr	r3, [r7, #4]
 8000378:	795b      	ldrb	r3, [r3, #5]
 800037a:	2b05      	cmp	r3, #5
 800037c:	d117      	bne.n	80003ae <GPIO_Init+0xc6>
			// rising edge
			EXTI->FTSR1 &= ~(1 << pGPIOHandle->GPIO_PinConfig.GPIO_Pin_Number);
 800037e:	4b89      	ldr	r3, [pc, #548]	@ (80005a4 <GPIO_Init+0x2bc>)
 8000380:	68db      	ldr	r3, [r3, #12]
 8000382:	687a      	ldr	r2, [r7, #4]
 8000384:	7912      	ldrb	r2, [r2, #4]
 8000386:	4611      	mov	r1, r2
 8000388:	2201      	movs	r2, #1
 800038a:	408a      	lsls	r2, r1
 800038c:	43d2      	mvns	r2, r2
 800038e:	4611      	mov	r1, r2
 8000390:	4a84      	ldr	r2, [pc, #528]	@ (80005a4 <GPIO_Init+0x2bc>)
 8000392:	400b      	ands	r3, r1
 8000394:	60d3      	str	r3, [r2, #12]
			EXTI->RTSR1 |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_Pin_Number);
 8000396:	4b83      	ldr	r3, [pc, #524]	@ (80005a4 <GPIO_Init+0x2bc>)
 8000398:	689b      	ldr	r3, [r3, #8]
 800039a:	687a      	ldr	r2, [r7, #4]
 800039c:	7912      	ldrb	r2, [r2, #4]
 800039e:	4611      	mov	r1, r2
 80003a0:	2201      	movs	r2, #1
 80003a2:	408a      	lsls	r2, r1
 80003a4:	4611      	mov	r1, r2
 80003a6:	4a7f      	ldr	r2, [pc, #508]	@ (80005a4 <GPIO_Init+0x2bc>)
 80003a8:	430b      	orrs	r3, r1
 80003aa:	6093      	str	r3, [r2, #8]
 80003ac:	e019      	b.n	80003e2 <GPIO_Init+0xfa>
		} else if (pGPIOHandle->GPIO_PinConfig.GPIO_Pin_Mode == GPIO_MODE_IT_RFT) {
 80003ae:	687b      	ldr	r3, [r7, #4]
 80003b0:	795b      	ldrb	r3, [r3, #5]
 80003b2:	2b06      	cmp	r3, #6
 80003b4:	d115      	bne.n	80003e2 <GPIO_Init+0xfa>
			// both falling and rising edge
			EXTI->FTSR1 |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_Pin_Number);
 80003b6:	4b7b      	ldr	r3, [pc, #492]	@ (80005a4 <GPIO_Init+0x2bc>)
 80003b8:	68db      	ldr	r3, [r3, #12]
 80003ba:	687a      	ldr	r2, [r7, #4]
 80003bc:	7912      	ldrb	r2, [r2, #4]
 80003be:	4611      	mov	r1, r2
 80003c0:	2201      	movs	r2, #1
 80003c2:	408a      	lsls	r2, r1
 80003c4:	4611      	mov	r1, r2
 80003c6:	4a77      	ldr	r2, [pc, #476]	@ (80005a4 <GPIO_Init+0x2bc>)
 80003c8:	430b      	orrs	r3, r1
 80003ca:	60d3      	str	r3, [r2, #12]
			EXTI->RTSR1 |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_Pin_Number);
 80003cc:	4b75      	ldr	r3, [pc, #468]	@ (80005a4 <GPIO_Init+0x2bc>)
 80003ce:	689b      	ldr	r3, [r3, #8]
 80003d0:	687a      	ldr	r2, [r7, #4]
 80003d2:	7912      	ldrb	r2, [r2, #4]
 80003d4:	4611      	mov	r1, r2
 80003d6:	2201      	movs	r2, #1
 80003d8:	408a      	lsls	r2, r1
 80003da:	4611      	mov	r1, r2
 80003dc:	4a71      	ldr	r2, [pc, #452]	@ (80005a4 <GPIO_Init+0x2bc>)
 80003de:	430b      	orrs	r3, r1
 80003e0:	6093      	str	r3, [r2, #8]
		}

		// 1.2 configure the GPIO port selection in SYSCFG
		uint8_t temp_1 = (pGPIOHandle->GPIO_PinConfig.GPIO_Pin_Number) / 4;
 80003e2:	687b      	ldr	r3, [r7, #4]
 80003e4:	791b      	ldrb	r3, [r3, #4]
 80003e6:	089b      	lsrs	r3, r3, #2
 80003e8:	74fb      	strb	r3, [r7, #19]
		uint8_t temp_2 = (pGPIOHandle->GPIO_PinConfig.GPIO_Pin_Number) % 4;
 80003ea:	687b      	ldr	r3, [r7, #4]
 80003ec:	791b      	ldrb	r3, [r3, #4]
 80003ee:	f003 0303 	and.w	r3, r3, #3
 80003f2:	74bb      	strb	r3, [r7, #18]
		uint8_t port = GPIO_BASE_ADDR_TO_PORT(pGPIOHandle->pGPIOx);
 80003f4:	687b      	ldr	r3, [r7, #4]
 80003f6:	681b      	ldr	r3, [r3, #0]
 80003f8:	f1b3 4f90 	cmp.w	r3, #1207959552	@ 0x48000000
 80003fc:	d01d      	beq.n	800043a <GPIO_Init+0x152>
 80003fe:	687b      	ldr	r3, [r7, #4]
 8000400:	681b      	ldr	r3, [r3, #0]
 8000402:	4a69      	ldr	r2, [pc, #420]	@ (80005a8 <GPIO_Init+0x2c0>)
 8000404:	4293      	cmp	r3, r2
 8000406:	d016      	beq.n	8000436 <GPIO_Init+0x14e>
 8000408:	687b      	ldr	r3, [r7, #4]
 800040a:	681b      	ldr	r3, [r3, #0]
 800040c:	4a67      	ldr	r2, [pc, #412]	@ (80005ac <GPIO_Init+0x2c4>)
 800040e:	4293      	cmp	r3, r2
 8000410:	d00f      	beq.n	8000432 <GPIO_Init+0x14a>
 8000412:	687b      	ldr	r3, [r7, #4]
 8000414:	681b      	ldr	r3, [r3, #0]
 8000416:	4a66      	ldr	r2, [pc, #408]	@ (80005b0 <GPIO_Init+0x2c8>)
 8000418:	4293      	cmp	r3, r2
 800041a:	d008      	beq.n	800042e <GPIO_Init+0x146>
 800041c:	687b      	ldr	r3, [r7, #4]
 800041e:	681b      	ldr	r3, [r3, #0]
 8000420:	4a64      	ldr	r2, [pc, #400]	@ (80005b4 <GPIO_Init+0x2cc>)
 8000422:	4293      	cmp	r3, r2
 8000424:	d101      	bne.n	800042a <GPIO_Init+0x142>
 8000426:	2304      	movs	r3, #4
 8000428:	e008      	b.n	800043c <GPIO_Init+0x154>
 800042a:	2300      	movs	r3, #0
 800042c:	e006      	b.n	800043c <GPIO_Init+0x154>
 800042e:	2303      	movs	r3, #3
 8000430:	e004      	b.n	800043c <GPIO_Init+0x154>
 8000432:	2302      	movs	r3, #2
 8000434:	e002      	b.n	800043c <GPIO_Init+0x154>
 8000436:	2301      	movs	r3, #1
 8000438:	e000      	b.n	800043c <GPIO_Init+0x154>
 800043a:	2300      	movs	r3, #0
 800043c:	747b      	strb	r3, [r7, #17]
		SYSCFG_PCLK_EN();
 800043e:	4b5e      	ldr	r3, [pc, #376]	@ (80005b8 <GPIO_Init+0x2d0>)
 8000440:	699b      	ldr	r3, [r3, #24]
 8000442:	4a5d      	ldr	r2, [pc, #372]	@ (80005b8 <GPIO_Init+0x2d0>)
 8000444:	f043 0301 	orr.w	r3, r3, #1
 8000448:	6193      	str	r3, [r2, #24]
		SYSCFG->EXTICR[temp_1] = port << (temp_2 * 4);
 800044a:	7c7a      	ldrb	r2, [r7, #17]
 800044c:	7cbb      	ldrb	r3, [r7, #18]
 800044e:	009b      	lsls	r3, r3, #2
 8000450:	fa02 f103 	lsl.w	r1, r2, r3
 8000454:	4a59      	ldr	r2, [pc, #356]	@ (80005bc <GPIO_Init+0x2d4>)
 8000456:	7cfb      	ldrb	r3, [r7, #19]
 8000458:	3302      	adds	r3, #2
 800045a:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
		// 1.3 enable the EXTI interrupt delivery using IMR
		EXTI->IMR1 |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_Pin_Number);
 800045e:	4b51      	ldr	r3, [pc, #324]	@ (80005a4 <GPIO_Init+0x2bc>)
 8000460:	681b      	ldr	r3, [r3, #0]
 8000462:	687a      	ldr	r2, [r7, #4]
 8000464:	7912      	ldrb	r2, [r2, #4]
 8000466:	4611      	mov	r1, r2
 8000468:	2201      	movs	r2, #1
 800046a:	408a      	lsls	r2, r1
 800046c:	4611      	mov	r1, r2
 800046e:	4a4d      	ldr	r2, [pc, #308]	@ (80005a4 <GPIO_Init+0x2bc>)
 8000470:	430b      	orrs	r3, r1
 8000472:	6013      	str	r3, [r2, #0]
	}
	temp = 0;
 8000474:	2300      	movs	r3, #0
 8000476:	617b      	str	r3, [r7, #20]

	// 2. configure the speed
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_Pin_Speed << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_Pin_Number));
 8000478:	687b      	ldr	r3, [r7, #4]
 800047a:	799b      	ldrb	r3, [r3, #6]
 800047c:	461a      	mov	r2, r3
 800047e:	687b      	ldr	r3, [r7, #4]
 8000480:	791b      	ldrb	r3, [r3, #4]
 8000482:	005b      	lsls	r3, r3, #1
 8000484:	fa02 f303 	lsl.w	r3, r2, r3
 8000488:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIOx->OSPEEDR &= ~(0x3 << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_Pin_Number));
 800048a:	687b      	ldr	r3, [r7, #4]
 800048c:	681b      	ldr	r3, [r3, #0]
 800048e:	689a      	ldr	r2, [r3, #8]
 8000490:	687b      	ldr	r3, [r7, #4]
 8000492:	791b      	ldrb	r3, [r3, #4]
 8000494:	005b      	lsls	r3, r3, #1
 8000496:	2103      	movs	r1, #3
 8000498:	fa01 f303 	lsl.w	r3, r1, r3
 800049c:	43db      	mvns	r3, r3
 800049e:	4619      	mov	r1, r3
 80004a0:	687b      	ldr	r3, [r7, #4]
 80004a2:	681b      	ldr	r3, [r3, #0]
 80004a4:	400a      	ands	r2, r1
 80004a6:	609a      	str	r2, [r3, #8]
	pGPIOHandle->pGPIOx->OSPEEDR |= temp;
 80004a8:	687b      	ldr	r3, [r7, #4]
 80004aa:	681b      	ldr	r3, [r3, #0]
 80004ac:	6899      	ldr	r1, [r3, #8]
 80004ae:	687b      	ldr	r3, [r7, #4]
 80004b0:	681b      	ldr	r3, [r3, #0]
 80004b2:	697a      	ldr	r2, [r7, #20]
 80004b4:	430a      	orrs	r2, r1
 80004b6:	609a      	str	r2, [r3, #8]

	// 3. configure pull up / down setting
	temp = 0;
 80004b8:	2300      	movs	r3, #0
 80004ba:	617b      	str	r3, [r7, #20]
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_Pin_PuPd << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_Pin_Number));
 80004bc:	687b      	ldr	r3, [r7, #4]
 80004be:	79db      	ldrb	r3, [r3, #7]
 80004c0:	461a      	mov	r2, r3
 80004c2:	687b      	ldr	r3, [r7, #4]
 80004c4:	791b      	ldrb	r3, [r3, #4]
 80004c6:	005b      	lsls	r3, r3, #1
 80004c8:	fa02 f303 	lsl.w	r3, r2, r3
 80004cc:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIOx->PUPDR &= ~(0x3 << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_Pin_Number));
 80004ce:	687b      	ldr	r3, [r7, #4]
 80004d0:	681b      	ldr	r3, [r3, #0]
 80004d2:	68da      	ldr	r2, [r3, #12]
 80004d4:	687b      	ldr	r3, [r7, #4]
 80004d6:	791b      	ldrb	r3, [r3, #4]
 80004d8:	005b      	lsls	r3, r3, #1
 80004da:	2103      	movs	r1, #3
 80004dc:	fa01 f303 	lsl.w	r3, r1, r3
 80004e0:	43db      	mvns	r3, r3
 80004e2:	4619      	mov	r1, r3
 80004e4:	687b      	ldr	r3, [r7, #4]
 80004e6:	681b      	ldr	r3, [r3, #0]
 80004e8:	400a      	ands	r2, r1
 80004ea:	60da      	str	r2, [r3, #12]
	pGPIOHandle->pGPIOx->PUPDR |= temp;
 80004ec:	687b      	ldr	r3, [r7, #4]
 80004ee:	681b      	ldr	r3, [r3, #0]
 80004f0:	68d9      	ldr	r1, [r3, #12]
 80004f2:	687b      	ldr	r3, [r7, #4]
 80004f4:	681b      	ldr	r3, [r3, #0]
 80004f6:	697a      	ldr	r2, [r7, #20]
 80004f8:	430a      	orrs	r2, r1
 80004fa:	60da      	str	r2, [r3, #12]


	// 4. configure the output type
	temp = 0;
 80004fc:	2300      	movs	r3, #0
 80004fe:	617b      	str	r3, [r7, #20]
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_Pin_OPType << (pGPIOHandle->GPIO_PinConfig.GPIO_Pin_Number));
 8000500:	687b      	ldr	r3, [r7, #4]
 8000502:	7a1b      	ldrb	r3, [r3, #8]
 8000504:	461a      	mov	r2, r3
 8000506:	687b      	ldr	r3, [r7, #4]
 8000508:	791b      	ldrb	r3, [r3, #4]
 800050a:	fa02 f303 	lsl.w	r3, r2, r3
 800050e:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIOx->OTYPER &= ~(0x1 << (pGPIOHandle->GPIO_PinConfig.GPIO_Pin_Number));
 8000510:	687b      	ldr	r3, [r7, #4]
 8000512:	681b      	ldr	r3, [r3, #0]
 8000514:	685a      	ldr	r2, [r3, #4]
 8000516:	687b      	ldr	r3, [r7, #4]
 8000518:	791b      	ldrb	r3, [r3, #4]
 800051a:	4619      	mov	r1, r3
 800051c:	2301      	movs	r3, #1
 800051e:	408b      	lsls	r3, r1
 8000520:	43db      	mvns	r3, r3
 8000522:	4619      	mov	r1, r3
 8000524:	687b      	ldr	r3, [r7, #4]
 8000526:	681b      	ldr	r3, [r3, #0]
 8000528:	400a      	ands	r2, r1
 800052a:	605a      	str	r2, [r3, #4]
	pGPIOHandle->pGPIOx->OTYPER |= temp;
 800052c:	687b      	ldr	r3, [r7, #4]
 800052e:	681b      	ldr	r3, [r3, #0]
 8000530:	6859      	ldr	r1, [r3, #4]
 8000532:	687b      	ldr	r3, [r7, #4]
 8000534:	681b      	ldr	r3, [r3, #0]
 8000536:	697a      	ldr	r2, [r7, #20]
 8000538:	430a      	orrs	r2, r1
 800053a:	605a      	str	r2, [r3, #4]

	// 5. configure the alt functionality
	temp = 0;
 800053c:	2300      	movs	r3, #0
 800053e:	617b      	str	r3, [r7, #20]
	if (pGPIOHandle->GPIO_PinConfig.GPIO_Pin_Mode == GPIO_MODE_ALT) {
 8000540:	687b      	ldr	r3, [r7, #4]
 8000542:	795b      	ldrb	r3, [r3, #5]
 8000544:	2b02      	cmp	r3, #2
 8000546:	d159      	bne.n	80005fc <GPIO_Init+0x314>

		uint8_t temp1, temp2 = 0;
 8000548:	2300      	movs	r3, #0
 800054a:	743b      	strb	r3, [r7, #16]

		temp1 = (pGPIOHandle->GPIO_PinConfig.GPIO_Pin_Number) / 8;
 800054c:	687b      	ldr	r3, [r7, #4]
 800054e:	791b      	ldrb	r3, [r3, #4]
 8000550:	08db      	lsrs	r3, r3, #3
 8000552:	73fb      	strb	r3, [r7, #15]
		temp2 = (pGPIOHandle->GPIO_PinConfig.GPIO_Pin_Number) % 8;
 8000554:	687b      	ldr	r3, [r7, #4]
 8000556:	791b      	ldrb	r3, [r3, #4]
 8000558:	f003 0307 	and.w	r3, r3, #7
 800055c:	743b      	strb	r3, [r7, #16]

		if (temp1) {
 800055e:	7bfb      	ldrb	r3, [r7, #15]
 8000560:	2b00      	cmp	r3, #0
 8000562:	d02d      	beq.n	80005c0 <GPIO_Init+0x2d8>
			temp = (pGPIOHandle->GPIO_PinConfig.GPIO_Pin_AltFun << (4 * temp2));
 8000564:	687b      	ldr	r3, [r7, #4]
 8000566:	7a5b      	ldrb	r3, [r3, #9]
 8000568:	461a      	mov	r2, r3
 800056a:	7c3b      	ldrb	r3, [r7, #16]
 800056c:	009b      	lsls	r3, r3, #2
 800056e:	fa02 f303 	lsl.w	r3, r2, r3
 8000572:	617b      	str	r3, [r7, #20]
			pGPIOHandle->pGPIOx->AFRH &= ~(0xF << (4 * temp2));
 8000574:	687b      	ldr	r3, [r7, #4]
 8000576:	681b      	ldr	r3, [r3, #0]
 8000578:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 800057a:	7c3b      	ldrb	r3, [r7, #16]
 800057c:	009b      	lsls	r3, r3, #2
 800057e:	210f      	movs	r1, #15
 8000580:	fa01 f303 	lsl.w	r3, r1, r3
 8000584:	43db      	mvns	r3, r3
 8000586:	4619      	mov	r1, r3
 8000588:	687b      	ldr	r3, [r7, #4]
 800058a:	681b      	ldr	r3, [r3, #0]
 800058c:	400a      	ands	r2, r1
 800058e:	625a      	str	r2, [r3, #36]	@ 0x24
			pGPIOHandle->pGPIOx->AFRH |= temp;
 8000590:	687b      	ldr	r3, [r7, #4]
 8000592:	681b      	ldr	r3, [r3, #0]
 8000594:	6a59      	ldr	r1, [r3, #36]	@ 0x24
 8000596:	687b      	ldr	r3, [r7, #4]
 8000598:	681b      	ldr	r3, [r3, #0]
 800059a:	697a      	ldr	r2, [r7, #20]
 800059c:	430a      	orrs	r2, r1
 800059e:	625a      	str	r2, [r3, #36]	@ 0x24
			pGPIOHandle->pGPIOx->AFRL &= ~(0xF << (4 * temp2));
			pGPIOHandle->pGPIOx->AFRL |= temp;
		}
	}

}
 80005a0:	e02c      	b.n	80005fc <GPIO_Init+0x314>
 80005a2:	bf00      	nop
 80005a4:	40010400 	.word	0x40010400
 80005a8:	48000400 	.word	0x48000400
 80005ac:	48000800 	.word	0x48000800
 80005b0:	48000c00 	.word	0x48000c00
 80005b4:	48001400 	.word	0x48001400
 80005b8:	40021000 	.word	0x40021000
 80005bc:	40010000 	.word	0x40010000
			temp = (pGPIOHandle->GPIO_PinConfig.GPIO_Pin_AltFun << (4 * temp2));
 80005c0:	687b      	ldr	r3, [r7, #4]
 80005c2:	7a5b      	ldrb	r3, [r3, #9]
 80005c4:	461a      	mov	r2, r3
 80005c6:	7c3b      	ldrb	r3, [r7, #16]
 80005c8:	009b      	lsls	r3, r3, #2
 80005ca:	fa02 f303 	lsl.w	r3, r2, r3
 80005ce:	617b      	str	r3, [r7, #20]
			pGPIOHandle->pGPIOx->AFRL &= ~(0xF << (4 * temp2));
 80005d0:	687b      	ldr	r3, [r7, #4]
 80005d2:	681b      	ldr	r3, [r3, #0]
 80005d4:	6a1a      	ldr	r2, [r3, #32]
 80005d6:	7c3b      	ldrb	r3, [r7, #16]
 80005d8:	009b      	lsls	r3, r3, #2
 80005da:	210f      	movs	r1, #15
 80005dc:	fa01 f303 	lsl.w	r3, r1, r3
 80005e0:	43db      	mvns	r3, r3
 80005e2:	4619      	mov	r1, r3
 80005e4:	687b      	ldr	r3, [r7, #4]
 80005e6:	681b      	ldr	r3, [r3, #0]
 80005e8:	400a      	ands	r2, r1
 80005ea:	621a      	str	r2, [r3, #32]
			pGPIOHandle->pGPIOx->AFRL |= temp;
 80005ec:	687b      	ldr	r3, [r7, #4]
 80005ee:	681b      	ldr	r3, [r3, #0]
 80005f0:	6a19      	ldr	r1, [r3, #32]
 80005f2:	687b      	ldr	r3, [r7, #4]
 80005f4:	681b      	ldr	r3, [r3, #0]
 80005f6:	697a      	ldr	r2, [r7, #20]
 80005f8:	430a      	orrs	r2, r1
 80005fa:	621a      	str	r2, [r3, #32]
}
 80005fc:	bf00      	nop
 80005fe:	371c      	adds	r7, #28
 8000600:	46bd      	mov	sp, r7
 8000602:	bc80      	pop	{r7}
 8000604:	4770      	bx	lr
 8000606:	bf00      	nop

08000608 <GPIO_PCLK_CTRL>:
 *
 * Return			: None
 *
 * Note				: N/A
 */
void GPIO_PCLK_CTRL(GPIO_REG_t *pGPIOx, uint8_t EnDi){
 8000608:	b480      	push	{r7}
 800060a:	b083      	sub	sp, #12
 800060c:	af00      	add	r7, sp, #0
 800060e:	6078      	str	r0, [r7, #4]
 8000610:	460b      	mov	r3, r1
 8000612:	70fb      	strb	r3, [r7, #3]


	if (EnDi == ENABLE) {
 8000614:	78fb      	ldrb	r3, [r7, #3]
 8000616:	2b01      	cmp	r3, #1
 8000618:	d136      	bne.n	8000688 <GPIO_PCLK_CTRL+0x80>
		if (pGPIOx == GPIOA) {
 800061a:	687b      	ldr	r3, [r7, #4]
 800061c:	f1b3 4f90 	cmp.w	r3, #1207959552	@ 0x48000000
 8000620:	d106      	bne.n	8000630 <GPIO_PCLK_CTRL+0x28>
			GPIOA_PCLK_EN();
 8000622:	4b37      	ldr	r3, [pc, #220]	@ (8000700 <GPIO_PCLK_CTRL+0xf8>)
 8000624:	695b      	ldr	r3, [r3, #20]
 8000626:	4a36      	ldr	r2, [pc, #216]	@ (8000700 <GPIO_PCLK_CTRL+0xf8>)
 8000628:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 800062c:	6153      	str	r3, [r2, #20]
			GPIOD_PCLK_DI();
		} else if (pGPIOx == GPIOF) {
			GPIOF_PCLK_DI();
		}
	}
}
 800062e:	e061      	b.n	80006f4 <GPIO_PCLK_CTRL+0xec>
		} else if (pGPIOx == GPIOB) {
 8000630:	687b      	ldr	r3, [r7, #4]
 8000632:	4a34      	ldr	r2, [pc, #208]	@ (8000704 <GPIO_PCLK_CTRL+0xfc>)
 8000634:	4293      	cmp	r3, r2
 8000636:	d106      	bne.n	8000646 <GPIO_PCLK_CTRL+0x3e>
			GPIOB_PCLK_EN();
 8000638:	4b31      	ldr	r3, [pc, #196]	@ (8000700 <GPIO_PCLK_CTRL+0xf8>)
 800063a:	695b      	ldr	r3, [r3, #20]
 800063c:	4a30      	ldr	r2, [pc, #192]	@ (8000700 <GPIO_PCLK_CTRL+0xf8>)
 800063e:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 8000642:	6153      	str	r3, [r2, #20]
}
 8000644:	e056      	b.n	80006f4 <GPIO_PCLK_CTRL+0xec>
		} else if (pGPIOx == GPIOC) {
 8000646:	687b      	ldr	r3, [r7, #4]
 8000648:	4a2f      	ldr	r2, [pc, #188]	@ (8000708 <GPIO_PCLK_CTRL+0x100>)
 800064a:	4293      	cmp	r3, r2
 800064c:	d106      	bne.n	800065c <GPIO_PCLK_CTRL+0x54>
			GPIOC_PCLK_EN();
 800064e:	4b2c      	ldr	r3, [pc, #176]	@ (8000700 <GPIO_PCLK_CTRL+0xf8>)
 8000650:	695b      	ldr	r3, [r3, #20]
 8000652:	4a2b      	ldr	r2, [pc, #172]	@ (8000700 <GPIO_PCLK_CTRL+0xf8>)
 8000654:	f443 2300 	orr.w	r3, r3, #524288	@ 0x80000
 8000658:	6153      	str	r3, [r2, #20]
}
 800065a:	e04b      	b.n	80006f4 <GPIO_PCLK_CTRL+0xec>
		} else if (pGPIOx == GPIOD) {
 800065c:	687b      	ldr	r3, [r7, #4]
 800065e:	4a2b      	ldr	r2, [pc, #172]	@ (800070c <GPIO_PCLK_CTRL+0x104>)
 8000660:	4293      	cmp	r3, r2
 8000662:	d106      	bne.n	8000672 <GPIO_PCLK_CTRL+0x6a>
			GPIOD_PCLK_EN();
 8000664:	4b26      	ldr	r3, [pc, #152]	@ (8000700 <GPIO_PCLK_CTRL+0xf8>)
 8000666:	695b      	ldr	r3, [r3, #20]
 8000668:	4a25      	ldr	r2, [pc, #148]	@ (8000700 <GPIO_PCLK_CTRL+0xf8>)
 800066a:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 800066e:	6153      	str	r3, [r2, #20]
}
 8000670:	e040      	b.n	80006f4 <GPIO_PCLK_CTRL+0xec>
		} else if (pGPIOx == GPIOF) {
 8000672:	687b      	ldr	r3, [r7, #4]
 8000674:	4a26      	ldr	r2, [pc, #152]	@ (8000710 <GPIO_PCLK_CTRL+0x108>)
 8000676:	4293      	cmp	r3, r2
 8000678:	d13c      	bne.n	80006f4 <GPIO_PCLK_CTRL+0xec>
			GPIOF_PCLK_EN();
 800067a:	4b21      	ldr	r3, [pc, #132]	@ (8000700 <GPIO_PCLK_CTRL+0xf8>)
 800067c:	695b      	ldr	r3, [r3, #20]
 800067e:	4a20      	ldr	r2, [pc, #128]	@ (8000700 <GPIO_PCLK_CTRL+0xf8>)
 8000680:	f443 0380 	orr.w	r3, r3, #4194304	@ 0x400000
 8000684:	6153      	str	r3, [r2, #20]
}
 8000686:	e035      	b.n	80006f4 <GPIO_PCLK_CTRL+0xec>
		if (pGPIOx == GPIOA) {
 8000688:	687b      	ldr	r3, [r7, #4]
 800068a:	f1b3 4f90 	cmp.w	r3, #1207959552	@ 0x48000000
 800068e:	d106      	bne.n	800069e <GPIO_PCLK_CTRL+0x96>
			GPIOA_PCLK_DI();
 8000690:	4b1b      	ldr	r3, [pc, #108]	@ (8000700 <GPIO_PCLK_CTRL+0xf8>)
 8000692:	695b      	ldr	r3, [r3, #20]
 8000694:	4a1a      	ldr	r2, [pc, #104]	@ (8000700 <GPIO_PCLK_CTRL+0xf8>)
 8000696:	f423 3300 	bic.w	r3, r3, #131072	@ 0x20000
 800069a:	6153      	str	r3, [r2, #20]
}
 800069c:	e02a      	b.n	80006f4 <GPIO_PCLK_CTRL+0xec>
		} else if (pGPIOx == GPIOB) {
 800069e:	687b      	ldr	r3, [r7, #4]
 80006a0:	4a18      	ldr	r2, [pc, #96]	@ (8000704 <GPIO_PCLK_CTRL+0xfc>)
 80006a2:	4293      	cmp	r3, r2
 80006a4:	d106      	bne.n	80006b4 <GPIO_PCLK_CTRL+0xac>
			GPIOB_PCLK_DI();
 80006a6:	4b16      	ldr	r3, [pc, #88]	@ (8000700 <GPIO_PCLK_CTRL+0xf8>)
 80006a8:	695b      	ldr	r3, [r3, #20]
 80006aa:	4a15      	ldr	r2, [pc, #84]	@ (8000700 <GPIO_PCLK_CTRL+0xf8>)
 80006ac:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 80006b0:	6153      	str	r3, [r2, #20]
}
 80006b2:	e01f      	b.n	80006f4 <GPIO_PCLK_CTRL+0xec>
		} else if (pGPIOx == GPIOC) {
 80006b4:	687b      	ldr	r3, [r7, #4]
 80006b6:	4a14      	ldr	r2, [pc, #80]	@ (8000708 <GPIO_PCLK_CTRL+0x100>)
 80006b8:	4293      	cmp	r3, r2
 80006ba:	d106      	bne.n	80006ca <GPIO_PCLK_CTRL+0xc2>
			GPIOC_PCLK_DI();
 80006bc:	4b10      	ldr	r3, [pc, #64]	@ (8000700 <GPIO_PCLK_CTRL+0xf8>)
 80006be:	695b      	ldr	r3, [r3, #20]
 80006c0:	4a0f      	ldr	r2, [pc, #60]	@ (8000700 <GPIO_PCLK_CTRL+0xf8>)
 80006c2:	f423 2300 	bic.w	r3, r3, #524288	@ 0x80000
 80006c6:	6153      	str	r3, [r2, #20]
}
 80006c8:	e014      	b.n	80006f4 <GPIO_PCLK_CTRL+0xec>
		} else if (pGPIOx == GPIOD) {
 80006ca:	687b      	ldr	r3, [r7, #4]
 80006cc:	4a0f      	ldr	r2, [pc, #60]	@ (800070c <GPIO_PCLK_CTRL+0x104>)
 80006ce:	4293      	cmp	r3, r2
 80006d0:	d106      	bne.n	80006e0 <GPIO_PCLK_CTRL+0xd8>
			GPIOD_PCLK_DI();
 80006d2:	4b0b      	ldr	r3, [pc, #44]	@ (8000700 <GPIO_PCLK_CTRL+0xf8>)
 80006d4:	695b      	ldr	r3, [r3, #20]
 80006d6:	4a0a      	ldr	r2, [pc, #40]	@ (8000700 <GPIO_PCLK_CTRL+0xf8>)
 80006d8:	f423 1380 	bic.w	r3, r3, #1048576	@ 0x100000
 80006dc:	6153      	str	r3, [r2, #20]
}
 80006de:	e009      	b.n	80006f4 <GPIO_PCLK_CTRL+0xec>
		} else if (pGPIOx == GPIOF) {
 80006e0:	687b      	ldr	r3, [r7, #4]
 80006e2:	4a0b      	ldr	r2, [pc, #44]	@ (8000710 <GPIO_PCLK_CTRL+0x108>)
 80006e4:	4293      	cmp	r3, r2
 80006e6:	d105      	bne.n	80006f4 <GPIO_PCLK_CTRL+0xec>
			GPIOF_PCLK_DI();
 80006e8:	4b05      	ldr	r3, [pc, #20]	@ (8000700 <GPIO_PCLK_CTRL+0xf8>)
 80006ea:	695b      	ldr	r3, [r3, #20]
 80006ec:	4a04      	ldr	r2, [pc, #16]	@ (8000700 <GPIO_PCLK_CTRL+0xf8>)
 80006ee:	f423 0380 	bic.w	r3, r3, #4194304	@ 0x400000
 80006f2:	6153      	str	r3, [r2, #20]
}
 80006f4:	bf00      	nop
 80006f6:	370c      	adds	r7, #12
 80006f8:	46bd      	mov	sp, r7
 80006fa:	bc80      	pop	{r7}
 80006fc:	4770      	bx	lr
 80006fe:	bf00      	nop
 8000700:	40021000 	.word	0x40021000
 8000704:	48000400 	.word	0x48000400
 8000708:	48000800 	.word	0x48000800
 800070c:	48000c00 	.word	0x48000c00
 8000710:	48001400 	.word	0x48001400

08000714 <GPIO_Read_In_Pin>:
 *
 * Return			: GPIO pin value
 *
 * Note				: N/A
 */
uint8_t GPIO_Read_In_Pin(GPIO_REG_t *pGPIOx, uint8_t PinNumber){
 8000714:	b480      	push	{r7}
 8000716:	b085      	sub	sp, #20
 8000718:	af00      	add	r7, sp, #0
 800071a:	6078      	str	r0, [r7, #4]
 800071c:	460b      	mov	r3, r1
 800071e:	70fb      	strb	r3, [r7, #3]

	uint8_t value;
	value = (uint8_t) ((pGPIOx->IDR >> PinNumber) & ~(0xFE)); // 0x00000001
 8000720:	687b      	ldr	r3, [r7, #4]
 8000722:	691a      	ldr	r2, [r3, #16]
 8000724:	78fb      	ldrb	r3, [r7, #3]
 8000726:	fa22 f303 	lsr.w	r3, r2, r3
 800072a:	b2db      	uxtb	r3, r3
 800072c:	f003 0301 	and.w	r3, r3, #1
 8000730:	73fb      	strb	r3, [r7, #15]

	return value;
 8000732:	7bfb      	ldrb	r3, [r7, #15]
}
 8000734:	4618      	mov	r0, r3
 8000736:	3714      	adds	r7, #20
 8000738:	46bd      	mov	sp, r7
 800073a:	bc80      	pop	{r7}
 800073c:	4770      	bx	lr

0800073e <GPIO_Toggle_Out_Pin>:
 * Return			: None
 *
 * Note				: N/A
 */

void GPIO_Toggle_Out_Pin(GPIO_REG_t *pGPIOx, uint8_t PinNumber){
 800073e:	b480      	push	{r7}
 8000740:	b083      	sub	sp, #12
 8000742:	af00      	add	r7, sp, #0
 8000744:	6078      	str	r0, [r7, #4]
 8000746:	460b      	mov	r3, r1
 8000748:	70fb      	strb	r3, [r7, #3]

	pGPIOx->ODR ^= (1 << PinNumber);
 800074a:	687b      	ldr	r3, [r7, #4]
 800074c:	695b      	ldr	r3, [r3, #20]
 800074e:	78fa      	ldrb	r2, [r7, #3]
 8000750:	2101      	movs	r1, #1
 8000752:	fa01 f202 	lsl.w	r2, r1, r2
 8000756:	405a      	eors	r2, r3
 8000758:	687b      	ldr	r3, [r7, #4]
 800075a:	615a      	str	r2, [r3, #20]

}
 800075c:	bf00      	nop
 800075e:	370c      	adds	r7, #12
 8000760:	46bd      	mov	sp, r7
 8000762:	bc80      	pop	{r7}
 8000764:	4770      	bx	lr
	...

08000768 <__libc_init_array>:
 8000768:	b570      	push	{r4, r5, r6, lr}
 800076a:	4d0d      	ldr	r5, [pc, #52]	@ (80007a0 <__libc_init_array+0x38>)
 800076c:	4c0d      	ldr	r4, [pc, #52]	@ (80007a4 <__libc_init_array+0x3c>)
 800076e:	1b64      	subs	r4, r4, r5
 8000770:	10a4      	asrs	r4, r4, #2
 8000772:	2600      	movs	r6, #0
 8000774:	42a6      	cmp	r6, r4
 8000776:	d109      	bne.n	800078c <__libc_init_array+0x24>
 8000778:	4d0b      	ldr	r5, [pc, #44]	@ (80007a8 <__libc_init_array+0x40>)
 800077a:	4c0c      	ldr	r4, [pc, #48]	@ (80007ac <__libc_init_array+0x44>)
 800077c:	f000 f818 	bl	80007b0 <_init>
 8000780:	1b64      	subs	r4, r4, r5
 8000782:	10a4      	asrs	r4, r4, #2
 8000784:	2600      	movs	r6, #0
 8000786:	42a6      	cmp	r6, r4
 8000788:	d105      	bne.n	8000796 <__libc_init_array+0x2e>
 800078a:	bd70      	pop	{r4, r5, r6, pc}
 800078c:	f855 3b04 	ldr.w	r3, [r5], #4
 8000790:	4798      	blx	r3
 8000792:	3601      	adds	r6, #1
 8000794:	e7ee      	b.n	8000774 <__libc_init_array+0xc>
 8000796:	f855 3b04 	ldr.w	r3, [r5], #4
 800079a:	4798      	blx	r3
 800079c:	3601      	adds	r6, #1
 800079e:	e7f2      	b.n	8000786 <__libc_init_array+0x1e>
 80007a0:	080007c8 	.word	0x080007c8
 80007a4:	080007c8 	.word	0x080007c8
 80007a8:	080007c8 	.word	0x080007c8
 80007ac:	080007cc 	.word	0x080007cc

080007b0 <_init>:
 80007b0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80007b2:	bf00      	nop
 80007b4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80007b6:	bc08      	pop	{r3}
 80007b8:	469e      	mov	lr, r3
 80007ba:	4770      	bx	lr

080007bc <_fini>:
 80007bc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80007be:	bf00      	nop
 80007c0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80007c2:	bc08      	pop	{r3}
 80007c4:	469e      	mov	lr, r3
 80007c6:	4770      	bx	lr
